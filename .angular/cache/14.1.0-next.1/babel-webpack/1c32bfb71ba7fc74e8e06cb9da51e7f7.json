{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\n\nfunction NewPatientComponent_form_4_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Le pr\\u00E9nom est obligatoire.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NewPatientComponent_form_4_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, NewPatientComponent_form_4_div_10_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.prenom.errors == null ? null : ctx_r1.f.prenom.errors.required);\n  }\n}\n\nfunction NewPatientComponent_form_4_div_29_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email est obligatoire.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NewPatientComponent_form_4_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, NewPatientComponent_form_4_div_29_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.mail.errors == null ? null : ctx_r2.f.mail.errors.required);\n  }\n}\n\nfunction NewPatientComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function NewPatientComponent_form_4_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onSubmit(ctx_r5.forme.value));\n    });\n    i0.ɵɵelementStart(1, \"div\", 5)(2, \"div\", 6)(3, \"div\", 7)(4, \"div\", 5)(5, \"div\", 8)(6, \"label\", 9);\n    i0.ɵɵtext(7, \" Pr\\u00E9nom \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 6);\n    i0.ɵɵelement(9, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, NewPatientComponent_form_4_div_10_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 7)(12, \"div\", 5)(13, \"div\", 8)(14, \"label\", 12);\n    i0.ɵɵtext(15, \" Sexe \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 6)(17, \"select\", 13)(18, \"option\", 14);\n    i0.ɵɵtext(19, \"Homme\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"option\", 15);\n    i0.ɵɵtext(21, \"Femme\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(22, \"div\", 7)(23, \"div\", 5)(24, \"div\", 8)(25, \"label\", 16);\n    i0.ɵɵtext(26, \" Email \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"div\", 6);\n    i0.ɵɵelement(28, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(29, NewPatientComponent_form_4_div_29_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(30, \"button\", 18);\n    i0.ɵɵtext(31, \"Ajouter\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.forme);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.prenom.errors);\n    i0.ɵɵadvance(19);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.submitted && ctx_r0.f.mail.errors);\n  }\n}\n\nexport let NewPatientComponent = /*#__PURE__*/(() => {\n  class NewPatientComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.submitted = false;\n      this.forme = this.formBuilder.group({\n        // nom: ['', Validators.required, Validators.minLength(2), Validators.maxLength(50)],\n        prenom: ['', Validators.required, Validators.minLength(2), Validators.maxLength(50)],\n        // sexe: [''],\n        mail: ['', Validators.required] // dateNaissance: ['', Validators.required],\n        // telephone: [''],\n        // adresse: ['']\n\n      });\n    }\n\n    ngOnInit() {}\n\n    get f() {\n      return this.forme.controls;\n    }\n\n    onSubmit(patientInput) {\n      this.submitted = true;\n      if (this.forme.invalid) return;\n    }\n\n  }\n\n  NewPatientComponent.ɵfac = function NewPatientComponent_Factory(t) {\n    return new (t || NewPatientComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  NewPatientComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewPatientComponent,\n    selectors: [[\"app-new-patient\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"form-group\"], [1, \"col-md-3\"], [\"for\", \"prenom\", 1, \"label\"], [\"type\", \"text\", \"formControlName\", \"prenom\", \"name\", \"prenom\", \"id\", \"prenom\", \"placeholder\", \"Pr\\u00E9nom\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"sexe\", 1, \"label\"], [\"formControlName\", \"sexe\", \"name\", \"sexe\", \"id\", \"sexe\", 1, \"btn-ptimary\"], [\"value\", \"M\"], [\"value\", \"F\"], [\"for\", \"mail\", 1, \"label\"], [\"type\", \"text\", \"formControlName\", \"mail\", \"name\", \"mail\", \"id\", \"mail\", \"placeholder\", \"Email\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n    template: function NewPatientComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Nouveau Patient\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, NewPatientComponent_form_4_Template, 32, 3, \"form\", 3);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.forme);\n      }\n    },\n    dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return NewPatientComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}